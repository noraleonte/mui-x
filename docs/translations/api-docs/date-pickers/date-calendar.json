{
  "componentDescription": "",
  "propDescriptions": {
    "autoFocus": {
      "description": "If <code>true</code>, the main element is focused during the first mount. This main element is: - the element chosen by the visible view if any (i.e: the selected day on the <code>day</code> view). - the <code>input</code> element if there is a field rendered.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "dayOfWeekFormatter": {
      "description": "Formats the day of week displayed in the calendar header.",
      "deprecated": "",
      "typeDescriptions": {
        "date": "The date of the day of week provided by the adapter.",
        "string": "The name to display."
      }
    },
    "defaultValue": {
      "description": "The default selected value. Used when the component is not controlled.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "disabled": {
      "description": "If <code>true</code>, the picker and text field are disabled.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "disableFuture": {
      "description": "If <code>true</code>, disable values after the current date for date components, time for time components and both for date time components.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "disableHighlightToday": {
      "description": "If <code>true</code>, today&#39;s date is rendering without highlighting with circle.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "disablePast": {
      "description": "If <code>true</code>, disable values before the current date for date components, time for time components and both for date time components.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "displayWeekNumber": {
      "description": "If <code>true</code>, the week number will be display in the calendar.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "fixedWeekNumber": {
      "description": "The day view will show as many weeks as needed after the end of the current month to match this value. Put it to 6 to have a fixed number of weeks in Gregorian calendars",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "focusedView": {
      "description": "Controlled focused view.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "loading": {
      "description": "If <code>true</code>, calls <code>renderLoading</code> instead of rendering the day calendar. Can be used to preload information and show it in calendar.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "maxDate": {
      "description": "Maximal selectable date.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "minDate": {
      "description": "Minimal selectable date.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "monthsPerRow": {
      "description": "Months rendered per row.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "onChange": {
      "description": "Callback fired when the value changes.",
      "deprecated": "",
      "typeDescriptions": {
        "value": "The new value.",
        "selectionState": "Indicates if the date selection is complete."
      }
    },
    "onFocusedViewChange": {
      "description": "Callback fired on focused view change.",
      "deprecated": "",
      "typeDescriptions": {
        "view": "The new view to focus or not.",
        "hasFocus": "<code>true</code> if the view should be focused."
      }
    },
    "onMonthChange": {
      "description": "Callback fired on month change.",
      "deprecated": "",
      "typeDescriptions": { "month": "The new month." }
    },
    "onViewChange": {
      "description": "Callback fired on view change.",
      "deprecated": "",
      "typeDescriptions": { "view": "The new view." }
    },
    "onYearChange": {
      "description": "Callback fired on year change.",
      "deprecated": "",
      "typeDescriptions": { "year": "The new year." }
    },
    "openTo": {
      "description": "The default visible view. Used when the component view is not controlled. Must be a valid option from <code>views</code> list.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "readOnly": {
      "description": "Make picker read only.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "reduceAnimations": {
      "description": "If <code>true</code>, disable heavy animations.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "referenceDate": {
      "description": "The date used to generate the new value when both <code>value</code> and <code>defaultValue</code> are empty.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "renderLoading": {
      "description": "Component displaying when passed <code>loading</code> true.",
      "deprecated": "",
      "typeDescriptions": { "React.ReactNode": "The node to render when loading." }
    },
    "shouldDisableDate": {
      "description": "Disable specific date.<br>Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.",
      "deprecated": "",
      "typeDescriptions": {
        "day": "The date to test.",
        "boolean": "If <code>true</code> the date will be disabled."
      }
    },
    "shouldDisableMonth": {
      "description": "Disable specific month.",
      "deprecated": "",
      "typeDescriptions": {
        "month": "The month to test.",
        "boolean": "If <code>true</code>, the month will be disabled."
      }
    },
    "shouldDisableYear": {
      "description": "Disable specific year.",
      "deprecated": "",
      "typeDescriptions": {
        "year": "The year to test.",
        "boolean": "If <code>true</code>, the year will be disabled."
      }
    },
    "showDaysOutsideCurrentMonth": {
      "description": "If <code>true</code>, days outside the current month are rendered:<br>- if <code>fixedWeekNumber</code> is defined, renders days to have the weeks requested.<br>- if <code>fixedWeekNumber</code> is not defined, renders day to fill the first and last week of the current month.<br>- ignored if <code>calendars</code> equals more than <code>1</code> on range pickers.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "slotProps": {
      "description": "The props used for each component slot.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "slots": {
      "description": "Overridable component slots.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "timezone": {
      "description": "Choose which timezone to use for the value. Example: &quot;default&quot;, &quot;system&quot;, &quot;UTC&quot;, &quot;America/New_York&quot;. If you pass values from other timezones to some props, they will be converted to this timezone before being used.<br>See the <a href=\"https://mui.com/x/react-date-pickers/timezone/\">timezones documentation</a> for more details.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "value": {
      "description": "The selected value. Used when the component is controlled.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "view": {
      "description": "The visible view. Used when the component view is controlled. Must be a valid option from <code>views</code> list.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "views": { "description": "Available views.", "deprecated": "", "typeDescriptions": {} },
    "yearsPerRow": {
      "description": "Years rendered per row.",
      "deprecated": "",
      "typeDescriptions": {}
    }
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "viewTransitionContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the transition group element"
    }
  },
  "slotDescriptions": {
    "calendarHeader": "Custom component for calendar header. Check the <a href=\"https://mui.com/x/api/date-pickers/pickers-calendar-header/\">PickersCalendarHeader</a> component.",
    "day": "Custom component for day. Check the <a href=\"https://mui.com/x/api/date-pickers/pickers-day/\">PickersDay</a> component.",
    "leftArrowIcon": "Icon displayed in the left view switch button.",
    "nextIconButton": "Button allowing to switch to the right view.",
    "previousIconButton": "Button allowing to switch to the left view.",
    "rightArrowIcon": "Icon displayed in the right view switch button.",
    "switchViewButton": "Button displayed to switch between different calendar views.",
    "switchViewIcon": "Icon displayed in the SwitchViewButton. Rotated by 180Â° when the open view is &#39;year&#39;."
  }
}
